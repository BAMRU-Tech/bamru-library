<% var style = locals.style === 'homepage' ? 'main-item main-item--bottom' : 'g-footer' %>
<div class="<%= style %>">
  <% if (locals.pager) { %>
    <% pager.forEach((page, i) => { %>
  <a class="button btn-footer" href="<%- page.link %>"><%= i + 1 %></a>
    <% }) %>
  <% } %>
  <% if (locals.editLink) { %>
  <a class="button btn-footer" href="<%- editLink %>" id="edit-button" target="_blank">Edit This Page</a>
  <% } %>
  <% if (locals.parentId) { %>
  <a class="button btn-footer" href="https://docs.google.com/a/nytimes.com/document/create?usp=drive_web&folder=<%- parentId %>" target="_blank">Create New Page</a>
  <a class="button btn-footer" href="https://drive.google.com/drive/u/0/folders/<%- parentId %>" target="_blank">View Folder</a>
  <% } %>

  <p class="help-text">For help contributing or to report a problem, email <a href="mailto:***REMOVED***">***REMOVED***</a> or leave a message in the <a href="***REMOVED***/library">#library</a> slack channel.</p>
</div>
<script>
  // Google Analytics tracking
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', '***REMOVED***', 'auto');

  <% if(locals.pageType) { %>
    ga('set', 'contentGroup1', <%- JSON.stringify(locals.pageType) %>);
  <% } %>

  <% if(locals.topLevelFolder) { %>
    ga('set', 'contentGroup2', <%- JSON.stringify(locals.topLevelFolder) %>);
  <% } %>

  // get the userinfo then fire a pageview (can't cache in the page)
  $.ajax({
    method: 'GET',
    url: '/whoami.json'
  }).always(function (data) {
    var userId = (data || {}).analyticsUserId;
    if (userId) ga('set', 'userId', userId);
    ga('send', 'pageview');
    setUserInfo(data);
  });

  function setUserInfo(data) {
    setUsername(data);
    //setUserInitials(data);
  }

  function setUsername(data) {
    var username = data['email'] || 'NYTimes User';
    $('.user-fullname').text(username);
  }

  function setUserInitials(data) {
    //$('.btn-user-initial').text();
  }

  function getReadingHistory(cb) {
    $.ajax({
      method: 'GET',
      url: '/reading-history.json'
    }).always(function(data) {
      console.log("DATA: ", data)
      cb(data);
    })
  }

  $(document).on('click', '.user-tools', function() {
    getReadingHistory(generateReadingHistoryList);
  })

  function generateReadingHistoryList(data) {
    var contentHolder = $('.user-tools > #me > div.popup > ul.content');
    contentHolder.empty();
    var recentlyViewed = data['recentlyViewed'];

    recentlyViewed.forEach(function(element, index) {
      var my_li = $('<li/>');
      var link = $('<a/>', {
        "href" : element['doc']['path'] || element['doc']['slug']
      });
      var docs_title = $('<p/>', {
        "class" : "docs-title",
        "text" : element['doc']['prettyName']
      })
      var docs_attr = $('<p/>', {
        "class" : "docs-attr"
      })

      var folder_name = element['doc']['folder'] != undefined ? element['doc']['folder']['prettyName'] : element['doc']['prettyName']
      var docs_folder = $('<span/>', {
        "class" : "docs-folder",
        "text" : folder_name
      })

      var timestamp = $('<span/>', {
        "class" : "timestamp",
        "text" : "(" + element['lastViewed'] + ")"
      })

      docs_attr.append(docs_folder);
      docs_attr.append(timestamp);

      link.append(docs_title);
      link.append(docs_attr)

      my_li.append(link);
      contentHolder.append(my_li);
    });

    
  }

  /*
        <li>
          <a href="#">
            <p class="docs-title">Double Byline Hack for Scoop Articles</p>
            <p class="docs-attr">
              <span class="docs-folder">Digital News Design</span>
              <span class="timestamp">(3 mins ago)</span>
            </p>
          </a>
        </li>
  */

  $(document).on('click', '#edit-button', function () {
    $.ajax({
      method: 'GET',
      url: window.location.pathname,
      data: {
        edit: 1, // purge and keep out of cache temporarily
      }
    }) // no callback on this.
  })

</script>
